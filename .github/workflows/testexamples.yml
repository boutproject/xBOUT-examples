# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test examples

on:
  pull_request:
  schedule:
    # Use odd number of minutes, because GitHub says the start of the hour is a
    # high-load time.
    - cron: '17 0 * * 0'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        #python-version: [3.8, 3.9, '3.10', 3.x]
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install libhdf5-dev libnetcdf-dev
        python -m pip install --upgrade pip
        pip install --upgrade xbout jupyter
    - name: Install mayavi
      # Skip for Python-3.11 because Mayavi currently fails to build
      if: ${{ matrix.python-version != '3.x' }}
      run: |
        pip install --upgrade mayavi wand numpy vtk traitsui wxPython
    - name: Test Python scripts
      # Skip for Python-3.11 because Mayavi currently fails to build
      if: ${{ matrix.python-version != '3.x' }}
      run: |
        # The brackets are needed so the whole command returns 1 if any script fails.
        # Note, the tests of python scripts must come first, because the
        # jupyter notebook tests work by converting the notebook to a Python
        # script, and we don't want to test those scripts as they will fail due
        # to iPython stuff not being imported.
        (for example in */*.py; do python $example || exit 1; done)
    - name: Test Jupyter notebooks
      run: |
        # The brackets are needed so the whole command returns 1 if any notebook fails.
        (for example in */*.ipynb; do jupyter nbconvert --to python --execute $example || exit 1; done)
